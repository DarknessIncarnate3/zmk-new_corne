#include <dt-bindings/zmk/mouse.h>
#include <input/processors.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

/*

   &mmv_input_listener {
   input-processors = <&zip_xy_scaler 2 1>;
   };

   &msc_input_listener {
   input-processors = <&zip_xy_scaler 2 1>;
   };


 */

#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10

/ {
    behaviors {
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;

        tap-ms = <1>;
        label = "brightness";
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <30>;
    };

    zHomeMod: zHomeMod {
        compatible = "zmk,behavior-hold-tap";
        label = "ZHOMEMOD";
        bindings = <&kp>, <&kp>;

        #binding-cells = <2>;
        tapping-term-ms = <250>;
        quick-tap-ms = <200>;
        flavor = "tap-preferred";
        require-prior-idle-ms = <100>;
    };

    zHomeLayer: zHomeLayer {
        compatible = "zmk,behavior-hold-tap";
        label = "ZHOMELAYER";
        bindings = <&mo>, <&kp>;

        #binding-cells = <2>;
        tapping-term-ms = <250>;
        quick-tap-ms = <200>;
        flavor = "tap-preferred";
        require-prior-idle-ms = <100>;
    };

    xTab: xTab {
        compatible = "zmk,behavior-mod-morph";
        label = "XTAB";
        bindings = <&kp LEFT_WIN>, <&kp TAB>;

        #binding-cells = <0>;
        mods = <(MOD_LALT|MOD_RCTL)>;
        keep-mods = <(MOD_LALT)>;
    };

    xShiftonSpace: xShiftonSpace {
        compatible = "zmk,behavior-mod-morph";
        label = "XSHIFTONSPACE";
        bindings = <&kp SPACE>, <&zFast_Mod LEFT_SHIFT SPACE>;

        #binding-cells = <0>;
        mods = <(MOD_LCTL|MOD_LGUI|MOD_LALT)>;
        keep-mods = <(MOD_LCTL|MOD_LGUI|MOD_LALT)>;
    };

    xEntertab: xEntertab {
        compatible = "zmk,behavior-mod-morph";
        label = "XENTERTAB";
        bindings = <&zFast_Mod LGUI ENTER>, <&kp TAB>;

        #binding-cells = <0>;
        mods = <(MOD_LALT)>;
        keep-mods = <(MOD_LALT)>;
    };

    ySpacecap: ySpacecap {
        compatible = "zmk,behavior-tap-dance";
        label = "YSPACECAP";
        #binding-cells = <0>;
        bindings = <&kp SPACE>, <&caps_word>;

        tapping-term-ms = <200>;
    };

    yOutput: yOutput {
        compatible = "zmk,behavior-tap-dance";
        label = "YOUTPUT";
        #binding-cells = <0>;
        tapping-term-ms = <300>;
        bindings = <&out OUT_BLE>, <&out OUT_USB>;
    };

    zFastLayer: zFastLayer {
        compatible = "zmk,behavior-hold-tap";
        label = "ZFASTLAYER";
        bindings = <&mo>, <&kp>;

        #binding-cells = <2>;
        hold-while-undecided;
        tapping-term-ms = <200>;
    };

    xF4: xF4 {
        compatible = "zmk,behavior-mod-morph";
        label = "XF4";
        bindings = <&zFast_Mod LEFT_SHIFT MINUS>, <&kp F4>;

        #binding-cells = <0>;
        mods = <(MOD_LALT)>;
        keep-mods = <(MOD_LALT)>;
    };

    yPower: yPower {
        compatible = "zmk,behavior-tap-dance";
        label = "YPOWER";
        #binding-cells = <0>;
        bindings = <&ext_power EP_ON>, <&ext_power EP_OFF>;

        tapping-term-ms = <300>;
    };

    yBtClear: yBtClear {
        compatible = "zmk,behavior-tap-dance";
        label = "YBTCLEAR";
        #binding-cells = <0>;
        tapping-term-ms = <300>;
        bindings = <&none>, <&none>, <&bt BT_CLR>;
    };

    zFast_Mod: zFast_Mod {
        compatible = "zmk,behavior-hold-tap";
        label = "ZFAST_MOD";
        bindings = <&kp>, <&kp>;

        #binding-cells = <2>;
        tapping-term-ms = <200>;
        hold-while-undecided;
    };

    yOff: yOff {
        compatible = "zmk,behavior-tap-dance";
        label = "YOFF";
        #binding-cells = <0>;
        bindings = <&kp LG(L)>, <&soft_off>;

        tapping-term-ms = <300>;
    };

    yBacklight: yBacklight {
        compatible = "zmk,behavior-tap-dance";
        label = "YBACKLIGHT";
        #binding-cells = <0>;
        bindings = <&bl BL_ON>, <&bl BL_OFF>;
    };

    yColour: yColour {
        compatible = "zmk,behavior-tap-dance";
        label = "YCOLOUR";
        #binding-cells = <0>;
        tapping-term-ms = <300>;
        bindings =
            <&rgb_ug RGB_COLOR_HSB(0,0,58)>,
            <&rgb_ug RGB_COLOR_HSB(269,87,84)>,
            <&rgb_ug RGB_COLOR_HSB(173,36,27)>;
    };

    stickylayer: stickylayer {
        compatible = "zmk,behavior-hold-tap";
        label = "STICKYLAYER";
        bindings = <&mo>, <&sl>;

        #binding-cells = <2>;
        tapping-term-ms = <150>;
        hold-while-undecided;
    };

    z2layer: z2layer {
        compatible = "zmk,behavior-hold-tap";
        label = "Z2LAYER";
        bindings = <&mo>, <&to>;

        #binding-cells = <2>;
        hold-while-undecided;
        tapping-term-ms = <200>;
    };

    zSlowLayer: zSlowLayer {
        compatible = "zmk,behavior-hold-tap";
        label = "ZSLOWLAYER";
        bindings = <&mo>, <&kp>;

        #binding-cells = <2>;
        tapping-term-ms = <180>;
        quick-tap-ms = <150>;
        flavor = "tap-preferred";
    };

    zHome_alt: zHome_alt {
        compatible = "zmk,behavior-hold-tap";
        label = "ZHOME_ALT";
        bindings = <&alt_modlayer>, <&kp>;

        #binding-cells = <2>;
        tapping-term-ms = <250>;
        quick-tap-ms = <200>;
        flavor = "tap-preferred";
        require-prior-idle-ms = <100>;
    };

    zHome_ctrl: zHome_ctrl {
        compatible = "zmk,behavior-hold-tap";
        label = "ZHOME_CTRL";
        bindings = <&ctrl_modlayer>, <&kp>;

        #binding-cells = <2>;
        tapping-term-ms = <250>;
        quick-tap-ms = <200>;
        flavor = "tap-preferred";
        require-prior-idle-ms = <100>;
    };

    zHome_gui: zHome_gui {
        compatible = "zmk,behavior-hold-tap";
        label = "ZHOME_GUI";
        bindings = <&gui_modlayer>, <&kp>;

        #binding-cells = <2>;
        tapping-term-ms = <250>;
        quick-tap-ms = <200>;
        flavor = "tap-preferred";
        require-prior-idle-ms = <100>;
    };

    combos {
        compatible = "zmk,combos";

        quote {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <23 24>;
            require-prior-idle-ms = <5>;
            timeout-ms = <30>;
            layers = <6>;
        };

        single_quote {
            bindings = <&kp SQT>;
            key-positions = <24 25>;
            timeout-ms = <30>;
            require-prior-idle-ms = <5>;
            layers = <6>;
        };

        num_gui {
            bindings = <&kp LEFT_GUI>;
            key-positions = <17 16>;
            timeout-ms = <30>;
            slow-release;
            require-prior-idle-ms = <5>;
            layers = <6 5>;
        };

        num_shift {
            bindings = <&kp LEFT_SHIFT>;
            key-positions = <16 15>;
            timeout-ms = <30>;
            slow-release;
            require-prior-idle-ms = <5>;
            layers = <5 6>;
        };

        num_control {
            bindings = <&kp LEFT_CONTROL>;
            key-positions = <15 14>;
            slow-release;
            layers = <5 6>;
            timeout-ms = <30>;
            require-prior-idle-ms = <5>;
        };

        paren_open {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <8 9>;
            layers = <5 0 4>;
            timeout-ms = <30>;
            require-prior-idle-ms = <5>;
        };

        paren_close {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <9 10>;
            layers = <5 0 4>;
            timeout-ms = <30>;
            require-prior-idle-ms = <5>;
        };

        quote_all {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <10 8>;
            layers = <5 0 4>;
            timeout-ms = <30>;
            require-prior-idle-ms = <5>;
        };

        brace_left {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <23 24>;
            timeout-ms = <30>;
            require-prior-idle-ms = <5>;
            layers = <5 0 4>;
        };

        brace_right {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <24 25>;
            timeout-ms = <30>;
            require-prior-idle-ms = <5>;
            layers = <5 0 4>;
        };

        equal {
            bindings = <&kp EQUAL>;
            key-positions = <17 16>;
            timeout-ms = <30>;
            require-prior-idle-ms = <5>;
            layers = <5 0 4>;
        };
    };

    macros {
        new_macro: new_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none>;
            label = "NEW_MACRO";
        };

        alt_modlayer: alt_modlayer {
            compatible = "zmk,behavior-macro";
            wait-ms = <0>;
            tap-ms = <0>;
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&mo 11>,
                <&macro_press>,
                <&kp LALT>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&kp LALT>,
                <&macro_release>,
                <&mo 11>;
        };

        ctrl_modlayer: ctrl_modlayer {
            compatible = "zmk,behavior-macro";
            wait-ms = <0>;
            tap-ms = <0>;
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&mo 13>,
                <&macro_press>,
                <&kp LEFT_CONTROL>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&kp LEFT_CONTROL>,
                <&macro_release>,
                <&mo 13>;

            label = "CTRL_MODLAYER";
        };

        gui_modlayer: gui_modlayer {
            compatible = "zmk,behavior-macro";
            wait-ms = <0>;
            tap-ms = <0>;
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&mo 14>,
                <&macro_press>,
                <&kp LEFT_GUI>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&kp LEFT_GUI>,
                <&macro_release>,
                <&mo 14>;

            label = "GUI_MODLAYER";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "cole";
            bindings = <
&kp TAB                        &zHome_alt 0 Q            &zHome_ctrl 0 W       &zHome_gui 0 F             &zHomeLayer 10 P      &kp G                                          &to 0         &kp J                &kp L                        &kp U                   &kp Y                 &zHomeLayer 12 SEMICOLON  &kp BSPC
&zHomeLayer 9 MINUS            &zHomeMod LEFT_CONTROL A  &zHomeMod LEFT_ALT R  &zHomeMod LEFT_SHIFT S     &zHomeMod LEFT_GUI T  &kp D                                   &to 5  &none  &to 4  &kp H                &zHomeMod LEFT_GUI N         &zHomeMod LEFT_SHIFT E  &zHomeMod LEFT_ALT I  &zHomeMod LEFT_CONTROL O  &lt 10 SQT
&mt LEFT_ALT NON_US_BACKSLASH  &zHomeLayer 8 Z           &zHomeLayer 6 X       &kp C                      &zHomeLayer 5 V       &kp B                          &to 3           &to 6         &kp K                &kp M                        &kp COMMA               &kp DOT               &zHomeLayer 8 SLASH       &lt 9 GRAVE
                                                                               &zFast_Mod LEFT_SHIFT F13  &kp SPACE             &zHomeMod LEFT_CONTROL ESCAPE                                &zFastLayer 5 ENTER  &zFast_Mod LEFT_SHIFT SPACE  &stickylayer 6 6
            >;

            sensor-bindings = <&inc_dec_kp UP_ARROW DOWN_ARROW>;
        };

        layer_game {
            display-name = "game";
            bindings = <
&kp TAB    &kp Q  &kp W  &kp F               &kp P      &kp G                                   &to 0         &kp J                &kp L                        &kp U                    &kp Y    &kp SEMI  &kp BSPC
&kp LCTRL  &kp A  &kp R  &kp S               &kp T      &kp D                            &to 5  &none  &to 4  &kp H                &kp N                        &kp E                    &kp I    &kp O     &lt 10 SQT
&kp LSHFT  &kp Z  &kp X  &kp C               &kp V      &kp B              &kp C_MUTE           &to 6         &kp K                &kp M                        &kp COMMA                &kp DOT  &kp FSLH  &mo 9
                         &zFastLayer 10 SQT  &kp SPACE  &zFastLayer 5 ESC                                     &zFastLayer 4 ENTER  &zFast_Mod LEFT_SHIFT SPACE  &zFastLayer 6 BACKSPACE
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        layer_qwerty {
            display-name = "qwerty";
            bindings = <
&kp TAB    &kp Q  &kp W  &kp E               &kp R      &kp T                                      &kp UP               &kp Y                &kp U                        &kp I                    &kp O    &kp P     &kp BSPC
&kp LCTRL  &kp A  &kp S  &kp D               &kp F      &kp G                            &kp LEFT  &none     &kp RIGHT  &kp H                &kp J                        &kp K                    &kp L    &kp SEMI  &lt 10 SQT
&kp LSHFT  &kp Z  &kp X  &kp C               &kp V      &kp B              &kp C_MUTE              &kp DOWN             &kp N                &kp M                        &kp COMMA                &kp DOT  &kp FSLH  &mo 9
                         &zFastLayer 10 SQT  &kp SPACE  &zFastLayer 5 ESC                                               &zFastLayer 4 ENTER  &zFast_Mod LEFT_SHIFT SPACE  &zFastLayer 6 BACKSPACE
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        layer_entry {
            label = "entry";
            display-name = "entry";
            bindings = <
&kp TAB         &kp COMMA  &kp N1  &kp N2    &kp N3                          &kp LC(X)                              &mmv MOVE_Y(-400)                    &kp ASTERISK         &kp TAB    &kp RET              &kp ESC    &kp BSPC   &kp DEL
&kp LEFT_SHIFT  &kp N0     &kp N4  &kp N5    &kp N6                          &kp LC(C)           &mmv MOVE_X(-400)  &none              &mmv MOVE_X(400)  &kp PLUS             &kp LEFT   &kp DOWN             &kp UP     &kp RIGHT  &kp SLASH
&kp LEFT_ALT    &kp DOT    &kp N7  &kp N8    &kp N9                          &kp LC(V)  &to 0                       &mmv MOVE_Y(400)                     &kp MINUS            &kp HOME   &kp PG_UP            &kp PG_DN  &kp END    &zFastLayer 9 TILDE
                                   &kp LEFT  &zFast_Mod LEFT_CONTROL ESCAPE  &kp RIGHT                                                                   &zFastLayer 4 ENTER  &kp SPACE  &zFastLayer 6 ENTER
            >;

            sensor-bindings = <&inc_dec_kp UP_ARROW DOWN>;
        };

        layer_tempcole {
            display-name = "tcole";
            bindings = <
&kp TAB                        &kp Q  &kp W  &kp F      &kp P      &kp G                                               &to 0         &kp J                &kp L                        &kp U             &kp Y    &kp SEMICOLON  &kp BSPC
&kp MINUS                      &kp A  &kp R  &kp S      &kp T      &kp D                                        &to 5  &none  &to 4  &kp H                &kp N                        &kp E             &kp I    &kp O          &lt 10 SQT
&mt LEFT_ALT NON_US_BACKSLASH  &kp Z  &kp X  &kp C      &kp V      &kp B                          &kp C_MUTE           &to 6         &kp K                &kp M                        &kp COMMA         &kp DOT  &kp FSLH       &lt 9 GRAVE
                                             &kp LSHFT  &kp SPACE  &zHomeMod LEFT_CONTROL ESCAPE                                     &zFastLayer 5 ENTER  &zFast_Mod LEFT_SHIFT SPACE  &stickylayer 6 6
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        layer_num {
            display-name = "num";
            bindings = <
&kp TAB         &kp COMMA  &kp N1  &kp N2                          &kp N3               &kp LC(X)                            &to 0         &kp ASTERISK  &kp HOME                &kp PAGE_DOWN  &kp PAGE_DOWN  &zHomeLayer 3 END  &kp BACKSPACE
&kp LEFT_SHIFT  &kp N0     &kp N4  &kp N5                          &kp N6               &kp LC(C)                     &to 5  &none  &to 4  &kp PLUS      &kp LEFT                &kp DOWN       &kp UP         &kp RIGHT          &kp SLASH
&kp LEFT_ALT    &kp DOT    &kp N7  &kp N8                          &kp N9               &kp LC(V)            &none           &to 6         &kp MINUS     &none                   &none          &to 5          &kp SPACE          &zFastLayer 9 TILDE
                                   &zFast_Mod LEFT_CONTROL ESCAPE  &zSlowLayer 6 SPACE  &zFastLayer 7 ENTER                                &to 0         &zFast_Mod LSHFT SPACE  &kp LEFT_META
            >;

            label = "num";
            sensor-bindings = <&inc_dec_kp UP_ARROW DOWN>;
        };

        layer_sym {
            display-name = "sym";
            bindings = <
&kp TAB            &kp PERCENT  &kp MINUS       &kp LESS_THAN                   &kp GREATER_THAN     &kp PLUS                     &to 0         &kp PIPE         &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp COLON  &kp SEMICOLON  &none
&kp DOUBLE_QUOTES  &kp CARET    &kp DOLLAR      &kp LEFT_BRACKET                &kp RIGHT_BRACKET    &kp AT_SIGN           &to 5  &none  &to 4  &kp EXCLAMATION  &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp EQUAL  &kp ASTERISK   &kp SINGLE_QUOTE
&none              &kp POUND    &kp UNDERSCORE  &kp AMPERSAND                   &kp BACKSLASH        &kp GRAVE    &none           &to 6         &kp TILDE        &kp SLASH             &kp COMMA              &kp DOT    &kp QUESTION   &mo 7
                                                &zFast_Mod LEFT_CONTROL ESCAPE  &zFastLayer 5 SPACE  &key_repeat                                &kp ENTER        &kp LEFT_SHIFT        &to 0
            >;

            sensor-bindings = <&inc_dec_kp LEFT RIGHT>;
        };

        layer_mouse {
            display-name = "mouse";
            bindings = <
&kp TAB  &none      &mkp MCLK  &mkp RCLK       &mkp LCLK          &kp LC(X)                                &mmv MOVE_UP                     &kp DELETE  &kp HOME        &kp PG_UP       &kp PAGE_DOWN  &kp END          &kp DEL
&none    &kp LCTRL  &kp LALT   &kp LSHFT       &kp LGUI           &kp LC(C)                &mmv MOVE_LEFT  &mkp MCLK       &mmv MOVE_RIGHT  &kp SPACE   &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_UP   &mmv MOVE_RIGHT  &kp ENTER
&none    &none      &none      &kp LG(K_BACK)  &kp LG(K_FORWARD)  &kp LC(V)  &kp C_MUTE                    &mmv MOVE_DOWN                   &none       &msc SCRL_LEFT  &msc SCRL_DOWN  &msc SCRL_UP   &msc SCRL_RIGHT  &mo 9
                               &none           &none              &none                                                                     &none       &none           &to 0
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        repeat {
            bindings = <
&none  &kp Q  &kp W  &kp F  &kp P      &kp G                      &none         &kp J    &kp L  &kp U      &kp Y    &kp SEMI  &kp BACKSPACE
&none  &kp A  &kp R  &kp S  &kp T      &kp D               &none  &none  &none  &kp H    &kp N  &kp E      &kp I    &kp O     &kp SINGLE_QUOTE
&none  &kp Z  &kp X  &kp C  &kp V      &kp B      &none           &none         &kp K    &kp M  &kp COMMA  &kp DOT  &kp FSLH  &mo 9
                     &none  &kp SPACE  &kp SPACE                                &kp RET  &none  &none
            >;
        };

        layer_fn {
            display-name = "fn";
            bindings = <
&bt BT_SEL 0  &to 10  &to 1  &to 2  &to 3  &bt BT_SEL 3                                      &rgb_ug RGB_SAI                   &yPower          &yOff            &none            &none            &none            &yBtClear
&bt BT_SEL 1  &to 0   &to 4  &to 5  &to 6  &bt BT_SEL 4                     &rgb_ug RGB_HUD  &yColour         &rgb_ug RGB_HUI  &yBacklight      &none            &bl BL_INC       &bl BL_DEC       &none            &to 15
&bt BT_SEL 2  &to 15  &to 7  &to 8  &to 9  &yOutput      &rgb_ug RGB_TOG                     &rgb_ug RGB_SAD                   &rgb_ug RGB_BRI  &rgb_ug RGB_EFR  &rgb_ug RGB_BRD  &rgb_ug RGB_BRI  &rgb_ug RGB_EFF  &mo 9
                             &none  &none  &none                                                                               &none            &none            &to 0
            >;

            sensor-bindings = <&inc_dec_kp C_BRIGHTNESS_INC C_BRIGHTNESS_DEC>;
        };

        layer_f1 {
            display-name = "f1";
            bindings = <
&caps_word  &kp F11  &kp F1  &kp F2   &kp F3     &kp F3                             &kp DELETE                &none  &none      &none      &none     &none     &none
&none       &kp F10  &kp F4  &kp F5   &kp F6     &kp F5              &kp BACKSPACE  &none        &key_repeat  &none  &kp LCTRL  &kp LSHFT  &kp LALT  &kp LGUI  &none
&none       &kp F12  &kp F7  &kp F8   &kp F9     &kp F15    &none                   &kp K_PASTE               &none  &none      &none      &none     &none     &mo 9
                             &kp ESC  &kp SPACE  &kp ENTER                                                    &to 0  &none      &to 10
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        layer_alt {
            bindings = <
&none  &none  &kp LEFT_CONTROL  &none        &kp D      &kp F4                     &none         &kp P    &kp HOME  &kp PG_UP  &kp PG_DN  &kp END    &none
&none  &none  &kp LEFT_SHIFT    &kp LS(TAB)  &kp TAB    &none               &none  &none  &none  &none    &kp LEFT  &kp DOWN   &kp UP     &kp RIGHT  &none
&none  &none  &none             &none        &none      &none      &none           &none         &none    &none     &none      &none      &kp A      &mo 9
                                &kp ESC      &kp SPACE  &kp ENTER                                &kp RET  &none     &none
            >;

            label = "alt";
        };

        layer_ql {
            display-name = "ql";
            bindings = <
&none                 &none  &none  &none       &caps_word   &none                       &none         &none      &kp DELETE  &kp LC(DELETE)  &kp ENTER  &none  &none
&none                 &none  &none  &none       &kp F14      &none                &none  &none  &none  &none      &kp BSPC    &kp LC(BSPC)    &none      &none  &none
&kp NON_US_BACKSLASH  &none  &none  &none       &none        &none       &none           &none         &none      &kp LC(S)   &kp LS(LC(S))   &none      &none  &zFastLayer 9 TILDE
                                    &kp ESCAPE  &key_repeat  &caps_word                                &kp ENTER  &none       &caps_word
            >;
        };

        layer_ctrl {
            label = "ctrl";
            bindings = <
&kp LS(ESCAPE)  &kp LEFT_SHIFT  &none  &kp Z        &kp Y      &kp Q                      &none         &kp T          &kp HOME  &kp PG_UP  &kp PG_DN  &kp END    &none
&kp LA(DEL)     &kp A           &none  &kp LS(TAB)  &kp TAB    &kp W               &none  &none  &none  &kp BACKSPACE  &kp LEFT  &kp DOWN   &kp UP     &kp RIGHT  &none
&none           &none           &none  &kp P        &kp LS(N)  &kp N      &none           &none         &none          &kp C     &kp V      &kp X      &kp A      &mo 9
                                       &kp ESC      &kp SPACE  &kp ENTER                                &kp RET        &none     &none
            >;
        };

        layer_gui {
            label = "gui";
            bindings = <
&kp ESCAPE      &kp LEFT_CONTROL  &kp LEFT_SHIFT  &none    &kp E      &kp Q                      &none         &none      &kp HOME        &kp PG_UP  &kp PG_DN  &kp END     &kp PRINTSCREEN
&kp LA(PERIOD)  &kp LS(TAB)       &kp LS(S)       &none    &kp TAB    &kp W               &none  &none  &none  &kp PLUS   &kp LEFT        &kp DOWN   &kp UP     &kp RIGHT   &kp PAUSE_BREAK
&kp X           &kp P             &kp LC(D)       &kp M    &kp D      &kp L      &none           &none         &kp MINUS  &kp R           &kp V      &none      &kp LC(F4)  &mo 9
                                                  &kp ESC  &kp SPACE  &kp ENTER                                &kp RET    &kp LEFT_SHIFT  &none
            >;
        };

        layer_media {
            bindings = <
&kp C_QUIT  &kp C_RED_BUTTON  &kp C_BLUE_BUTTON  &kp C_GREEN  &kp C_YELLOW_BUTTON  &kp C_MUTE                               &kp UP                &none             &kp P      &kp N     &none   &none      &none
&to 0       &kp C_REWIND      &kp C_PREVIOUS     &kp C_NEXT   &kp C_FAST_FORWARD   &kp C_SUBTITLES                &kp LEFT  &kp ENTER  &kp RIGHT  &none             &kp LEFT   &kp DOWN  &kp UP  &kp RIGHT  &none
&none       &kp LEFT          &kp UP             &kp DOWN     &kp RIGHT            &kp C_STOP       &kp C_MUTE              &kp DOWN              &none             &none      &none     &none   &none      &mo 9
                                                 &kp LCTRL    &kp C_PLAY_PAUSE     &kp SPACE                                                      &kp LEFT_CONTROL  &kp SPACE  &to 0
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };
    };
};
