#include <dt-bindings/zmk/mouse.h>
#include <input/processors.dtsi>
#include <behaviors/num_word.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

/*

   &mmv_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

   &msc_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

 */

#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10

/ {
    behaviors {
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;

        tap-ms = <1>;
        label = "brightness";
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <30>;
    };

    xTab: xTab {
        compatible = "zmk,behavior-mod-morph";
        label = "XTAB";
        bindings = <&kp LEFT_WIN>, <&kp TAB>;

        #binding-cells = <0>;
        mods = <(MOD_LALT|MOD_RCTL)>;
        keep-mods = <(MOD_LALT)>;
    };

    xControlonalt: xControlonalt {
        compatible = "zmk,behavior-mod-morph";
        label = "XCONTROLONALT";
        bindings = <&ySpacecap>, <&mt LEFT_CONTROL MINUS>;

        #binding-cells = <0>;
        mods = <(MOD_LGUI|MOD_RGUI|MOD_LSFT|MOD_LALT)>;
        keep-mods = <(MOD_LGUI|MOD_RGUI|MOD_LSFT|MOD_LALT)>;
    };

    xShiftonSpace: xShiftonSpace {
        compatible = "zmk,behavior-mod-morph";
        label = "XSHIFTONSPACE";
        bindings = <&kp SPACE>, <&mt LEFT_SHIFT SPACE>;

        #binding-cells = <0>;
        mods = <(MOD_LCTL|MOD_LGUI|MOD_LALT)>;
        keep-mods = <(MOD_LCTL|MOD_LGUI|MOD_LALT)>;
    };

    xEntertab: xEntertab {
        compatible = "zmk,behavior-mod-morph";
        label = "XENTERTAB";
        bindings = <&mt LGUI ENTER>, <&kp TAB>;

        #binding-cells = <0>;
        mods = <(MOD_LALT)>;
        keep-mods = <(MOD_LALT)>;
    };

    ySpacecap: ySpacecap {
        compatible = "zmk,behavior-tap-dance";
        label = "YSPACECAP";
        #binding-cells = <0>;
        bindings = <&kp SPACE>, <&caps_word>;

        tapping-term-ms = <200>;
    };

    yNumCaps: yNumCaps {
        compatible = "zmk,behavior-tap-dance";
        label = "YNUMCAPS";
        #binding-cells = <0>;
        bindings = <&caps_word>, <&num_word 3>;

        tapping-term-ms = <200>;
    };

    yOutput: yOutput {
        compatible = "zmk,behavior-tap-dance";
        label = "YOUTPUT";
        #binding-cells = <0>;
        tapping-term-ms = <300>;
        bindings = <&out OUT_BLE>, <&out OUT_USB>;
    };

    zNumword: zNumword {
        compatible = "zmk,behavior-hold-tap";
        label = "ZNUMWORD";
        bindings = <&mo>, <&zNumword>;

        #binding-cells = <2>;
        tapping-term-ms = <200>;
        flavor = "hold-preferred";
    };

    zSpaceShift: zSpaceShift {
        compatible = "zmk,behavior-hold-tap";
        label = "ZSPACESHIFT";
        bindings = <&kp>, <&caps_word>;

        #binding-cells = <2>;
        tapping-term-ms = <200>;
        quick-tap-ms = <175>;
        flavor = "hold-preferred";
        retro-tap;
        hold-while-undecided;
    };

    zFastLayer: zFastLayer {
        compatible = "zmk,behavior-hold-tap";
        label = "ZFASTLAYER";
        bindings = <&mo>, <&kp>;

        #binding-cells = <2>;
        hold-while-undecided;
        tapping-term-ms = <200>;
    };

    xF4: xF4 {
        compatible = "zmk,behavior-mod-morph";
        label = "XF4";
        bindings = <&zFastLayer 7 MINUS>, <&kp F4>;

        #binding-cells = <0>;
        mods = <(MOD_LALT)>;
        keep-mods = <(MOD_LALT)>;
    };

    yPower: yPower {
        compatible = "zmk,behavior-tap-dance";
        label = "YPOWER";
        #binding-cells = <0>;
        bindings = <&ext_power EP_ON>, <&ext_power EP_OFF>;

        tapping-term-ms = <300>;
    };

    zyNumCapsWord: zyNumCapsWord {
        compatible = "zmk,behavior-hold-tap";
        label = "ZYNUMCAPSWORD";
        bindings = <&mo>, <&yNumCaps>;

        #binding-cells = <2>;
        tapping-term-ms = <200>;
        flavor = "hold-preferred";
        quick-tap-ms = <175>;
        hold-while-undecided;
    };

    yBtClear: yBtClear {
        compatible = "zmk,behavior-tap-dance";
        label = "YBTCLEAR";
        #binding-cells = <0>;
        tapping-term-ms = <300>;
        bindings = <&none>, <&none>, <&bt BT_CLR>;
    };

    combos {
        compatible = "zmk,combos";

        testmacro {
            bindings = <&kp LG(E)>;
            key-positions = <23 24 25>;
            timeout-ms = <100>;
            layers = <6>;
        };

        alignleft {
            bindings = <&kp LS(LG(LEFT_ARROW))>;
            key-positions = <23 24>;
            timeout-ms = <100>;
            layers = <6>;
        };

        alignright {
            bindings = <&kp LS(LG(RIGHT_ARROW))>;
            key-positions = <24 25>;
            timeout-ms = <100>;
            layers = <6>;
        };

        c_bracket {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <23 22>;
            layers = <0>;
        };

        c_bracket2 {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <24 25>;
            layers = <0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "cole";
            bindings = <
&kp TAB                        &kp Q             &kp W  &kp F                    &kp P           &kp G                          &kp UP                &kp J                &kp L                      &kp U               &kp Y    &kp SEMICOLON  &kp BSPC
&xF4                           &kp A             &kp R  &kp S                    &kp T           &kp D                &kp LEFT  &kp ENTER  &kp RIGHT  &kp H                &kp N                      &kp E               &kp I    &kp O          &zFastLayer 5 SQT
&mt LEFT_ALT NON_US_BACKSLASH  &mt LEFT_SHIFT Z  &kp X  &kp C                    &kp V           &kp B  &kp C_MUTE              &kp DOWN              &kp K                &kp M                      &kp COMMA           &kp DOT  &kp FSLH       &zFastLayer 6 GRAVE
                                                        &mt LEFT_CONTROL ESCAPE  &xShiftonSpace  &xTab                                                &zFastLayer 3 ENTER  &zSpaceShift LEFT_SHIFT 0  &zyNumCapsWord 4 0
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        layer_game {
            display-name = "game";
            bindings = <
&kp TAB    &kp Q  &kp W  &kp F              &kp P      &kp G                                      &kp UP               &kp J                &kp L   &kp U                 &kp Y    &kp SEMI  &kp BSPC
&kp LCTRL  &kp A  &kp R  &kp S              &kp T      &kp D                            &kp LEFT  &kp RET   &kp RIGHT  &kp H                &kp N   &kp E                 &kp I    &kp O     &zFastLayer 5 SQT
&kp LSHFT  &kp Z  &kp X  &kp C              &kp V      &kp B              &kp C_MUTE              &kp DOWN             &kp K                &kp M   &kp COMMA             &kp DOT  &kp FSLH  &kp RSHFT
                         &zFastLayer 6 SQT  &kp SPACE  &zFastLayer 3 ESC                                               &zFastLayer 3 ENTER  &trans  &zFastLayer 4 DELETE
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        layer_qwerty {
            display-name = "qwerty";
            bindings = <
&kp TAB                        &kp Q             &kp W  &kp E                    &kp R           &kp T                          &kp UP                &kp Y                &kp U                 &kp I          &kp O    &kp P     &kp BSPC
&zFastLayer 7 MINUS            &kp A             &kp S  &kp D                    &kp F           &kp G                &kp LEFT  &kp ENTER  &kp RIGHT  &kp H                &kp J                 &kp K          &kp L    &kp SEMI  &zFastLayer 5 SQT
&mt LEFT_ALT NON_US_BACKSLASH  &mt LEFT_SHIFT Z  &kp X  &kp C                    &kp V           &kp B  &kp C_MUTE              &kp DOWN              &kp N                &kp M                 &kp COMMA      &kp DOT  &kp FSLH  &zFastLayer 6 GRAVE
                                                        &mt LEFT_CONTROL ESCAPE  &xShiftonSpace  &xTab                                                &zFastLayer 3 ENTER  &mt LEFT_SHIFT SPACE  &zNumword 4 0
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        layer_num {
            display-name = "num";
            bindings = <
&kp TAB                 &kp GRAVE     &kp N1  &kp N2                 &kp N3                &kp ASTERISK                       &kp UP               &kp HASH       &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp PERCENT  &kp EXCLAMATION  &kp BACKSPACE
&mt LEFT_CONTROL MINUS  &kp NUMBER_0  &kp N4  &kp N5                 &kp N6                &kp PLUS                 &kp LEFT  &kp RET   &kp RIGHT  &kp AT         &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp CARET    &kp DOLLAR       &lt 5 SQT
&mt LEFT_SHIFT MINUS    &kp PERIOD    &kp N7  &kp N8                 &kp N9                &kp SLASH       &none              &kp DOWN             &kp AMPERSAND  &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp EQUAL    &kp COMMA        &lt 6 SEMICOLON
                                              &mt LEFT_SHIFT ESCAPE  &mt LEFT_SHIFT SPACE  &mt LGUI ENTER                                          &to 0          &kp LEFT_SHIFT        &lt 4 DEL
            >;

            sensor-bindings = <&inc_dec_kp UP_ARROW DOWN_ARROW>;
        };

        layer_nav {
            display-name = "nav";
            bindings = <
&kp TAB                        &kp C_VOICE_COMMAND  &mkp MCLK     &mkp RCLK                &mkp LCLK        &kp BACKSPACE                                 &mmv MOVE_UP                     &kp C_NEXT        &kp HOME              &kp PAGE_DOWN   &kp PAGE_DOWN  &kp END          &kp DEL
&none                          &mmv MOVE_LEFT       &mmv MOVE_UP  &mmv MOVE_DOWN           &mmv MOVE_RIGHT  &none                         &mmv MOVE_LEFT  &mkp MCLK       &mmv MOVE_RIGHT  &kp C_PLAY_PAUSE  &kp LEFT              &kp DOWN        &kp UP         &kp RIGHT        &kp ENTER
&mt LEFT_ALT NON_US_BACKSLASH  &kp LEFT_SHIFT       &kp K_BACK    &none                    &kp K_FORWARD    &kp C_SNAPSHOT  &kp C_MUTE                    &mmv MOVE_DOWN                   &kp C_PREVIOUS    &msc SCRL_LEFT        &msc SCRL_DOWN  &msc SCRL_UP   &msc SCRL_RIGHT  &kp PRINTSCREEN
                                                                  &mt LEFT_CONTROL ESCAPE  &xShiftonSpace   &xEntertab                                                                     &lt 3 ENTER       &mt LEFT_SHIFT SPACE  &to 0
            >;

            sensor-bindings = <&inc_dec_kp C_FAST_FORWARD C_REWIND>;
        };

        layer_fn {
            display-name = "fn";
            bindings = <
&to 0  &none         &none         &none         &none         &yPower                                           &rgb_ug RGB_SAI                                 &rgb_ug RGB_EFR  &rgb_ug RGB_EFF  &bl BL_TOG  &none       &none  &yBtClear
&to 2  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                     &rgb_ug RGB_HUD  &rgb_ug RGB_COLOR_HSB(0,0,30)  &rgb_ug RGB_HUI  &none            &bl BL_ON        &bl BL_INC  &bl BL_DEC  &none  &none
&to 1  &bt BT_SEL 5  &bt BT_SEL 6  &none         &none         &yOutput      &rgb_ug RGB_TOG                     &rgb_ug RGB_SAD                                 &rgb_ug RGB_BRI  &rgb_ug RGB_BRD  &none       &none       &none  &none
                                   &none         &none         &none                                                                                             &to 3            &to 4            &to 0
            >;

            sensor-bindings = <&inc_dec_kp C_BRIGHTNESS_INC C_BRIGHTNESS_DEC>;
        };

        layer_f1 {
            display-name = "f1";
            bindings = <
&none  &kp F10  &kp F1  &kp F2  &kp F3  &kp F13                  &none         &kp LS(LC(LA(F11)))  &kp LS(LA(LC(F12)))  &none               &none               &none                &none
&none  &kp F11  &kp F4  &kp F5  &kp F6  &kp F14           &none  &none  &none  &kp LC(LA(LS(F1)))   &kp LCTRL            &kp LSHFT           &kp LALT            &kp LGUI             &lt 5 SQT
&none  &kp F12  &kp F7  &kp F8  &kp F9  &kp F15  &none           &none         &kp LS(LA(LC(F6)))   &kp LS(LA(LC(F7)))   &kp LS(LA(LC(F8)))  &kp LS(LA(LC(F9)))  &kp LS(LC(LA(F10)))  &none
                        &none   &none   &none                                  &none                &none                &none
            >;
        };

        layer_func {
            display-name = "func";
            bindings = <
&none       &kp C_AC_EXIT  &none         &kp C_MEDIA_COMPUTER  &kp C_AL_FILE_BROWSER  &yPower                        &none         &kp K_LOCK            &kp K_FIND        &kp K_CONTEXT_MENU  &kp K_HELP     &kp K_MENU       &kp K_EXEC
&ySpacecap  &none          &num_word 3   &num_word 4           &caps_word             &none                   &none  &none  &none  &kp C_AL_LOCK         &kp LEFT_CONTROL  &kp LEFT_SHIFT      &kp LEFT_ALT   &kp LEFT_META    &none
&none       &kp C_AC_UNDO  &kp C_AC_CUT  &kp C_AC_COPY         &kp C_AC_PASTE         &kp C_AC_REDO  &none           &none         &kp C_AL_TEXT_EDITOR  &kp C_SUBTITLES   &kp C_MEDIA_GAMES   &kp C_AC_GOTO  &kp C_AC_SEARCH  &none
                                         &kp ESC               &none                  &kp ENTER                                    &kp C_AC_SEND         &kp TAB           &kp BSPC
            >;

            sensor-bindings = <&inc_dec_kp 0 0>;
        };
    };
};
